class Solution {
    public int[] searchRange(int[] nums, int target)
    {
        int[]res = new int[2];
        int n = nums.length;
        res[0] = findFirst(nums , target , n);
        res[1] = findLast(nums, target, n);
        
        return res;
    }
    
    
    
    public int findFirst(int[]nums,int target, int n)
    {
        int idx = -1;
        int start = 0;
        int end = n - 1;
        while(start <= end)
        {
            int mid = start + (end - start)/2;
            if(nums[mid] >= target)
            {
                end = mid - 1;
            }
            else
            {
                start = mid + 1;
            }
            if(nums[mid] == target)
            {
                idx = mid;
            }
            
        }
        return idx;
    }
    
    
    public int findLast(int[]nums , int target , int n)
    {
        int idx = -1;
        int start = 0;
        int end = n - 1;
        while(start <= end)
        {
            int mid = start + (end - start)/2;
            if(nums[mid] <= target)
            {
                start = mid + 1;
            }
            else{
                end = mid - 1;
            }
            if(nums[mid] == target)
                idx = mid;
        }
        
        return idx;
    }
    
}