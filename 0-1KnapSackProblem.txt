static int knapsackDp(int[]wt , int[]val , int n ,int capacity)
  {
	 int[][]dp = new int[n+1][capacity+1];
	 
	 for(int i = 1; i<dp.length; i++)
	 {
		 for(int j = 1; j<dp[0].length; j++)
		 {
			 
			 if(j >=j - wt[i - 1])
			 {
				 int leftCap = j - wt[i - 1];
				 if(dp[i - 1][leftCap] + val[i - 1] > dp[i][ j - 1])
				 {
					 dp[i][j] = dp[i][leftCap] + val[i - 1];
				 }
				 else {
					 dp[i][j] = dp[i][j - 1];
				 }
			 }
			 else {
				 dp[i][j] = dp[i][j - 1];
			 }
		 }
	 }
	 