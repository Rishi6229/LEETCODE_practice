Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.



class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        
        int[][]dp = new int[m][n];
        
        
        for(int i = m - 1; i>=0; i--)
        {
            for(int j = n - 1; j>=0; j--)
            {
                if(i == m - 1 && j == n -1)
                {
                   dp[i][j] = grid[i][j]; 
                }
                else if(i == m - 1)
                {
                    dp[i][j] = dp[i][j+1]+grid[i][j];
                }
                else if(j == n - 1)
                {
                  dp[i][j] = dp[i+1][j] + grid[i][j];   
                }
                else{
                    dp[i][j] = Math.min(dp[i+1][j] , dp[i][j+1])+grid[i][j];
                }
            }
        }
        
        
        return dp[0][0];
        
        
        
    }
}