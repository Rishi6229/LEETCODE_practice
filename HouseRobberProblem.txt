//House robber problem



public int rob(int[] nums) {
        int n = nums.length;
        int[]dp = new int[n];
        if(n == 0)
            return 0;
        
        if(n == 1)
            return nums[0];
        
        
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0] , nums[1]);

        //since for every ith house we have two choices.
        //to rob or to not if we rob the profit we have 
        //would be equivalent to the profit earned to the money 
        //robbed from the the house previous to the previous house.
        for(int i=2; i<n; i++)
        {

            dp[i]  = Math.max(dp[i-1],dp[i-2]+nums[i]);
        }
        return dp[n-1];
        
    }